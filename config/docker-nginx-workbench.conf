# HTTPS Configuration for Production with Cloudflare
# Cloudflare handles SSL termination, this is for local HTTPS if needed

# Map hostname to backend API endpoint
map $host $api_backend {
    workbench.lolzlab.com "http://192.168.1.110:4512";
    default "http://api:8000";
}

# Map hostname to frontend endpoint
map $host $frontend_backend {
    workbench.lolzlab.com "http://192.168.1.110:4510";
    default "http://frontend:80";
}

upstream api {
    server api:8000;
}

upstream frontend {
    server frontend:80;
}

# HTTP server - listen on both 80 and 443 for Cloudflare
server {
    listen 80;
    listen 443;  # Listen on 443 without SSL since Cloudflare handles it
    server_name tempus.lolzlab.com workbench.lolzlab.com localhost;

    # API requests - route based on hostname using mapped variables
    location /api/ {
        proxy_pass $api_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $host;
    }

    # API health endpoint
    location /api/health {
        proxy_pass $api_backend/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Health check
    location /health {
        access_log off;
        return 200 "OK";
        add_header Content-Type text/plain;
    }

    # Frontend - route based on hostname using mapped variables
    location / {
        proxy_pass $frontend_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $host;
    }
}